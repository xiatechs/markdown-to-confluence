@startuml
namespace node {
    interface APIClienter  {
        + CreatePage(root int, contents *markdown.FileContents, isroot bool) (int, error)
        + DeletePage(pageID int) error
        + UpdatePage(pageID int, pageVersion int64, pageContents *markdown.FileContents, originalPage confluence.PageResults) (bool, error)
        + FindPage(title string, many bool) (*confluence.PageResults, error)
        + UploadAttachment(filename string, id int, index bool, indexid int) error

    }
    class Node << (S,Aquamarine) >> {
        + Start(projectMasterID int, projectPath string, onlyDocs bool) bool
        + Tree() 
        + Delete() 

    }
    class Page << (S,Aquamarine) >> {
    }
    class Tree << (S,Aquamarine) >> {
    }
    class iterator << (S,Aquamarine) >> {
    }
    class mockclient << (S,Aquamarine) >> {
        + Print() 
        + GetPages() []Page
        + CreatePage(root int, contents *markdown.FileContents, _ bool) (int, error)
        + DeletePage(pageID int) error
        + UpdatePage(pageID int, pageVersion int64, pageContents *markdown.FileContents, originalPage confluence.PageResults) (bool, error)
        + FindPage(title string, many bool) (*confluence.PageResults, error)
        + UploadAttachment(filename string, id int, index bool, indexid int) error

    }
}

"node.APIClienter" <|-- "node.mockclient"

@enduml
