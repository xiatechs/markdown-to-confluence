package node

import (
	"testing"

	"github.com/golang/mock/gomock"
	confluence "github.com/xiatechs/markdown-to-confluence/confluence"
	markdown "github.com/xiatechs/markdown-to-confluence/markdown"
)

func TestStartAlreadyExists(t *testing.T) {
	ctrl := gomock.NewController(t)
	client := NewMockAPIClienter(ctrl)

	results := confluence.PageResults{}

	page := markdown.FileContents{}

	node := Node{}

	NodeAPIClient = client

	gomock.InOrder(
		client.EXPECT().FindPage("node", false).Times(1).Return(&results, nil),
		client.EXPECT().FindPage("More+info+on+'node'+repo", false).Times(1).Return(&results, nil),
		client.EXPECT().FindPage("plantuml-node", false).Times(1).Return(&results, nil),
		client.EXPECT().FindPage("markdown-to-confluence/node+readme", false).Times(1).Return(&results, nil),
		client.EXPECT().CreatePage(0, &page, true).Times(1).Return(0, nil),
	)

	node.Start("../node")
}

func TestStartBrandNew(t *testing.T) {
	ctrl := gomock.NewController(t)
	client := NewMockAPIClienter(ctrl)

	nodePage := markdown.FileContents{
		MetaData: map[string]interface{}{
			"title": "node",
		},
		Body: []byte{60, 112, 62, 87, 101, 108, 99, 111, 109, 101, 32, 116, 111, 32, 116, 104, 101, 32, 39, 60, 98, 62, 110, 111, 100, 101,
			60, 47, 98, 62, 39, 32, 102, 111, 108, 100, 101, 114, 32, 111, 102, 32, 116, 104, 105, 115, 32, 88, 105, 97, 116, 101, 99, 104, 32, 99,
			111, 100, 101, 32, 114, 101, 112, 111, 46, 60, 47, 112, 62, 10, 9, 9, 60, 112, 62, 84, 104, 105, 115, 32, 102, 111, 108, 100, 101, 114, 32,
			102, 117, 108, 108, 32, 112, 97, 116, 104, 32, 105, 110, 32, 116, 104, 101, 32, 114, 101, 112, 111, 32, 105, 115, 58, 32, 110, 111, 100, 101,
			60, 47, 112, 62, 10, 60, 112, 62, 89, 111, 117, 32, 119, 105, 108, 108, 32, 102, 105, 110, 100, 32, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116,
			115, 47, 105, 109, 97, 103, 101, 115, 32, 102, 111, 114, 32, 116, 104, 105, 115, 32, 102, 111, 108, 100, 101, 114, 32, 118, 105, 97, 32, 116, 104,
			101, 32, 101, 108, 108, 105, 112, 115, 105, 115, 32, 97, 116, 32, 116, 104, 101, 32, 116, 111, 112, 32, 114, 105, 103, 104, 116, 46, 60, 47, 112, 62,
			10, 60, 112, 62, 65, 110, 121, 32, 109, 97, 114, 107, 100, 111, 119, 110, 32, 111, 114, 32, 115, 117, 98, 102, 111, 108, 100, 101, 114, 115, 32, 105,
			115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 32, 105, 110, 32, 99, 104, 105, 108, 100, 114, 101, 110, 32, 112, 97, 103, 101, 115, 32, 117, 110,
			100, 101, 114, 32, 116, 104, 105, 115, 32, 112, 97, 103, 101, 46, 60, 47, 112, 62},
	}

	moreInfoPage := markdown.FileContents{
		MetaData: map[string]interface{}{
			"title": "More info on 'node' repo",
		},
		Body: []byte{60, 104, 50, 62, 70, 111, 108, 100, 101, 114, 115, 32, 119, 105, 116, 104, 32, 109, 97, 114, 107, 100, 111, 119, 110, 32, 112, 101, 114, 99, 101, 110, 116, 97, 103,
			101, 58, 32, 49, 53, 48, 46, 48, 48, 37, 60, 47, 104, 50, 62, 10, 60, 104, 50, 62, 70, 111, 108, 100, 101, 114, 115, 32, 119, 105, 116, 104, 32, 109, 97, 114, 107, 100, 111, 119,
			110, 32, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 58, 32, 50, 48, 48, 46, 48, 48, 37, 60, 47, 104, 50, 62, 10, 60, 104, 50, 62, 70, 105, 108, 101, 110, 97, 109, 101, 58, 32,
			110, 111, 100, 101, 47, 103, 101, 110, 101, 114, 97, 116, 101, 46, 103, 111, 60, 47, 104, 50, 62, 10, 60, 112, 62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 57, 54, 38, 103, 116, 59,
			32, 47, 47, 32, 103, 101, 110, 101, 114, 97, 116, 101, 84, 79, 68, 79, 80, 97, 103, 101, 32, 109, 101, 116, 104, 111, 100, 32, 99, 114, 101, 97, 116, 101, 115, 32, 97, 32, 112, 97,
			103, 101, 32, 105, 110, 32, 112, 97, 114, 101, 110, 116, 32, 102, 111, 108, 100, 101, 114, 60, 47, 112, 62, 10, 60,
			112, 62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 57, 56, 38, 103, 116, 59, 32, 102, 117, 110, 99, 32, 40, 110, 111, 100, 101, 32, 42, 78, 111, 100, 101, 41, 32, 103, 101, 110, 101,
			114, 97, 116, 101, 84, 79, 68, 79, 80, 97, 103, 101, 40, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 32, 115, 116, 114, 105, 110, 103, 41, 32, 123, 60, 47, 112, 62, 10, 60, 112,
			62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 49, 48, 50, 38, 103, 116, 59, 32, 9, 112, 97, 103, 101, 32, 58, 61, 32, 116, 111, 100, 111, 46, 71, 101, 110, 101, 114, 97, 116, 101, 84, 79,
			68, 79, 40, 114, 111, 111, 116, 68, 105, 114, 44, 32, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 41, 60, 47, 112, 62, 10, 60, 104, 50, 62, 70, 105, 108, 101, 110, 97, 109, 101,
			58, 32, 110, 111, 100, 101, 47, 110, 111, 100, 101, 46, 103, 111, 60, 47, 104, 50, 62, 10, 60, 112, 62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 54, 57, 38, 103, 116, 59, 32, 9, 9, 9,
			110, 111, 100, 101, 46, 103, 101, 110, 101, 114, 97, 116, 101, 84, 79, 68, 79, 80, 97, 103, 101, 40, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 83, 116,
			114, 105, 110, 103, 41, 60, 47, 112, 62, 10, 60, 104, 50, 62, 70, 105, 108, 101, 110, 97, 109, 101, 58, 32, 110, 111, 100, 101, 47, 103, 101, 110, 101, 114, 97, 116, 101, 46, 103,
			111, 60, 47, 104, 50, 62, 10, 60, 112, 62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 57, 54, 38, 103, 116, 59, 32, 47, 47, 32, 103, 101, 110, 101, 114, 97, 116, 101, 84, 79, 68, 79, 80,
			97, 103, 101, 32, 109, 101, 116, 104, 111, 100, 32, 99, 114, 101, 97, 116, 101, 115, 32, 97, 32, 112, 97, 103, 101, 32, 105, 110, 32, 112, 97, 114, 101, 110, 116, 32, 102, 111, 108,
			100, 101, 114, 60, 47, 112, 62, 10, 60, 112, 62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 57, 56, 38, 103, 116, 59, 32, 102, 117, 110, 99, 32, 40, 110, 111, 100, 101, 32, 42, 78, 111,
			100, 101, 41, 32, 103, 101, 110, 101, 114, 97, 116, 101, 84, 79, 68, 79, 80, 97, 103, 101, 40, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 32, 115, 116, 114, 105, 110, 103, 41,
			32, 123, 60, 47, 112, 62, 10, 60, 112, 62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 49, 48, 50, 38, 103, 116, 59, 32, 9, 112, 97, 103, 101, 32, 58, 61, 32, 116, 111, 100, 111, 46, 71, 101,
			110, 101, 114, 97, 116, 101, 84, 79, 68, 79, 40, 114, 111, 111, 116, 68, 105, 114, 44, 32, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 41, 60, 47, 112, 62, 10, 60, 104, 50, 62, 70,
			105, 108, 101, 110, 97, 109, 101, 58, 32, 110, 111, 100, 101, 47, 110, 111, 100, 101, 46, 103, 111, 60, 47, 104, 50, 62, 10, 60, 112, 62, 82, 111, 119, 58, 32, 38, 108, 116, 59, 54, 57,
			38, 103, 116, 59, 32, 9, 9, 9, 110, 111, 100, 101, 46, 103, 101, 110, 101, 114, 97, 116, 101, 84, 79, 68, 79, 80, 97, 103, 101, 40, 112, 101, 114, 99, 101, 110, 116, 97, 103, 101, 83,
			116, 114, 105, 110, 103, 41, 60, 47, 112, 62, 10},
	}

	plantumlPage := markdown.FileContents{
		MetaData: map[string]interface{}{
			"title": "plantuml-node",
		},
		Body: []byte{60, 112, 62, 60, 115, 112, 97, 110, 32, 99, 108, 97, 115, 115, 61, 34, 99, 111, 110, 102, 108, 117, 101, 110, 99, 101, 45, 101, 109, 98, 101, 100, 100, 101, 100, 45, 102, 105, 108, 101,
			45, 119, 114, 97, 112, 112, 101, 100, 34, 62, 60, 105, 109, 103, 32, 115, 114, 99, 61, 34, 104, 116, 116, 112, 115, 58, 47, 47, 120, 105, 97, 116, 101, 99, 104, 45, 109, 97, 114, 107, 117, 112,
			46, 97, 116, 108, 97, 115, 115, 105, 97, 110, 46, 110, 101, 116, 47, 119, 105, 107, 105, 47, 100, 111, 119, 110, 108, 111, 97, 100, 47, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115, 47,
			48, 47, 110, 111, 100, 101, 45, 112, 117, 109, 108, 100, 105, 97, 103, 114, 97, 109, 46, 112, 110, 103, 34, 62, 60, 47, 105, 109, 103, 62, 60, 47, 115, 112, 97, 110, 62, 60, 47, 112, 62},
	}

	readmePage := markdown.FileContents{
		MetaData: map[string]interface{}{
			"title": "markdown-to-confluence/node readme",
		},
		Body: []byte{60, 104, 49, 62, 109, 97, 114, 107, 100, 111, 119, 110, 45, 116, 111, 45, 99, 111, 110, 102, 108, 117, 101, 110, 99, 101, 47, 110, 111, 100, 101, 32, 114, 101, 97, 100, 109, 101, 60, 47, 104, 49, 62, 10, 60, 104, 50,
			62, 116, 104, 101, 32, 110, 111, 100, 101, 32, 112, 97, 99, 107, 97, 103, 101, 32, 105, 115, 32, 116, 111, 32, 101, 110, 97, 98, 108, 101, 32, 114, 101, 97, 100, 105, 110, 103, 32, 116, 104, 114, 111, 117, 103, 104, 32, 97, 32,
			114, 101, 112, 111, 32, 97, 110, 100, 32, 99, 114, 101, 97, 116, 101, 32, 97, 32, 116, 114, 101, 101, 32, 111, 102, 32, 99, 111, 110, 116, 101, 110, 116, 32, 111, 110, 32, 99, 111, 110, 102, 108, 117, 101, 110, 99, 101, 60, 47,
			104, 50, 62, 10, 60, 104, 51, 62, 84, 104, 101, 32, 112, 97, 99, 107, 97, 103, 101, 32, 99, 111, 110, 116, 97, 105, 110, 115, 32, 111, 110, 101, 32, 101, 120, 112, 111, 114, 116, 101, 100, 32, 115, 116, 114, 117, 99, 116, 58, 60,
			47, 104, 51, 62, 10, 60, 112, 114, 101, 62, 60, 99, 111, 100, 101, 62, 47, 47, 32,
			78, 111, 100, 101, 32, 115, 116, 114, 117, 99, 116, 32, 101, 110, 97, 98, 108, 101, 115, 32, 99, 114, 101, 97, 116, 105, 111, 110, 32, 111, 102, 32, 97, 32, 112, 97, 103, 101, 32, 116, 114, 101, 101, 10, 78, 111, 100, 101, 123,
			125, 10, 60, 47, 99, 111, 100, 101, 62, 60, 47, 112, 114, 101, 62, 10, 60, 104, 51, 62, 84, 104, 101, 32, 112, 97, 99, 107, 97,
			103, 101, 32, 99, 111, 110, 116, 97, 105, 110, 115, 32, 116, 119, 111, 32, 101, 120, 112, 111, 114, 116, 101, 100, 32, 109, 101, 116, 104, 111, 100, 115, 58, 60, 47, 104, 51, 62, 10, 60, 112, 114, 101, 62, 60, 99, 111, 100, 101,
			62, 78, 111, 100, 101, 123, 125, 10, 10, 47, 47, 32, 116, 104, 105, 115, 32, 109, 101, 116, 104, 111, 100, 32, 98, 101, 103,
			105, 110, 115, 32, 116, 104, 101, 32, 103, 101, 110, 101, 114, 97, 116, 105, 111, 110, 32, 111, 102, 32, 97, 32, 112, 97, 103, 101, 32, 116, 114, 101, 101, 32, 105, 110, 32, 99, 111, 110, 102, 108, 117, 101, 110, 99, 101, 32,
			102, 111, 114, 32, 97, 32, 114, 101, 112, 111, 32, 112, 114, 111, 106, 101, 99, 116, 32, 112, 97, 116, 104, 46, 10, 47, 47, 32,
			105, 116, 32, 114, 117, 116, 117, 114, 110, 115, 32, 97, 32, 98, 111, 111, 108, 101, 97, 110, 32, 99, 111, 110, 102, 105, 114, 109, 105, 110, 103, 32, 39, 105, 115, 32, 112, 114, 111, 106, 101, 99, 116, 80, 97, 116, 104, 32, 97,
			32, 118, 97, 108, 105, 100, 32, 102, 111, 108, 100, 101, 114, 32, 112, 97, 116, 104, 39, 46, 10, 83, 116, 97, 114, 116, 40, 112, 114, 111, 106, 101, 99, 116, 80, 97, 116, 104, 32, 115, 116, 114, 105, 110, 103, 44, 32, 99, 108,
			105, 101, 110, 116, 32, 42, 99, 111, 110, 102, 108, 117, 101, 110, 99, 101, 46, 65, 80, 73, 67, 108, 105, 101, 110, 116, 41, 32, 98, 111, 111, 108, 10, 10, 47, 47, 32, 116, 104, 105, 115, 32, 109, 101, 116, 104, 111, 100, 32, 98,
			101, 103, 105, 110, 115, 32, 116, 104, 101, 32, 100, 101, 108, 101, 116, 105, 111, 110, 32, 111, 102, 32, 112, 97, 103, 101, 115, 32, 105, 110, 32, 99, 111, 110, 102, 108, 117, 101, 110, 99, 101, 32, 116, 104, 97, 116, 32,
			100, 111, 32, 110, 111, 116, 32, 101, 120, 105, 115, 116, 32, 105, 110, 10, 47, 47, 32, 108, 111, 99, 97, 108, 32, 114, 101, 112, 111, 115, 105, 116, 111, 114, 121, 32, 112, 114, 111, 106, 101, 99, 116, 32, 112, 97, 116, 104,
			32, 45, 32, 105, 116, 32, 99, 97, 110, 32, 98, 101, 32, 99, 97, 108, 108, 101, 100, 32, 97, 102, 116, 101, 114, 32, 73, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 32, 109, 101, 116, 104, 111, 100, 32, 105, 115, 32, 99,
			97, 108, 108, 101, 100, 32, 97, 110, 100, 32, 114, 101, 116, 117, 114, 110, 115, 32, 116, 114, 117, 101, 46, 10, 68, 101, 108, 101, 116, 101, 40, 41, 10, 60, 47, 99, 111, 100, 101, 62, 60, 47, 112, 114, 101, 62},
	}

	node := Node{}

	NodeAPIClient = client

	gomock.InOrder(
		client.EXPECT().FindPage("node", false).Times(1).Return(nil, nil),
		client.EXPECT().CreatePage(0, &nodePage, true).Times(1).Return(0, nil),
		client.EXPECT().FindPage("More+info+on+'node'+repo", false).Times(1).Return(nil, nil),
		client.EXPECT().CreatePage(0, &moreInfoPage, false).Times(1).Return(0, nil),
		client.EXPECT().FindPage("plantuml-node", false).Times(1).Return(nil, nil),
		client.EXPECT().CreatePage(0, &plantumlPage, false).Times(1).Return(0, nil),
		client.EXPECT().FindPage("markdown-to-confluence/node+readme", false).Times(1).Return(nil, nil),
		client.EXPECT().CreatePage(0, &readmePage, false).Times(1).Return(0, nil),
	)

	node.Start("../node")
}

func TestStart(t *testing.T) {
	node := Node{}
	want := false

	got := node.Start("./fakedirectory")
	if got != want {
		t.Errorf("got %t want %t", got, want)
	}

	nodeOne := Node{}

	nodeTest := Node{
		root: &nodeOne,
	}
	want = false

	got = nodeTest.Start("./fakedirectory")
	if got != want {
		t.Errorf("got %t want %t", got, want)
	}
}

func TestIsFolder(t *testing.T) {
	isFolder("hello")
}

func TestIterate(t *testing.T) {
	node := Node{}

	node.path = "./"

	boolean := node.iterate(false, false)
	if boolean != false {
		t.Errorf("got %t want %t", boolean, false)
	}

	boolean = node.iterate(true, true)
	if boolean != false {
		t.Errorf("got %t want %t", boolean, false)
	}

	boolean = node.iterate(true, false)
	if boolean != false {
		t.Errorf("got %t want %t", boolean, false)
	}

	boolean = node.iterate(false, true)
	if boolean != false {
		t.Errorf("got %t want %t", boolean, false)
	}
}
